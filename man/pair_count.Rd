% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pair_count.R
\name{pair_count}
\alias{pair_count}
\alias{pair_count_}
\title{Count pairs of items that cooccur within a group}
\usage{
pair_count(data, group, value, unique_pair = TRUE, self = FALSE,
  sort = FALSE)

pair_count_(data, group_col, value_col, unique_pair = TRUE, self = FALSE,
  sort = FALSE)
}
\arguments{
\item{data}{A tbl}

\item{group, group_col}{Column to count pairs within}

\item{value, value_col}{Column containing values to count pairs of}

\item{unique_pair}{Whether to have only one pair of value1 and
value2. Setting this to FALSE is useful if you want to afterwards
find the most common values paired with one of interest.}

\item{self}{Whether to include an item as co-occuring with itself}

\item{sort}{Whether to sort in decreasing order of frequency}
}
\value{
A data frame with three columns: \code{value1}, \code{value2},
and \code{n}.
}
\description{
This function has been deprecated. Work on this and similar functions
is now going on in the widyr package (\url{https://github.com/dgrtwo/widyr}).
Count the number of times pairs of items cooccur within a group.
This returns a table with one row for each word-word pair that
occurs within a group, along with \code{n}, the number of groups
the pair cooccurs in. \code{pair_count_} is the standard-evaluation
version that can be programmed with.
}
\examples{

\dontrun{
library(janeaustenr)
library(dplyr)

pride_prejudice_words <- data_frame(text = prideprejudice) \%>\%
  mutate(line = row_number()) \%>\%
  unnest_tokens(word, text) \%>\%
  anti_join(stop_words)

# find words that co-occur within lines
pride_prejudice_words \%>\%
  pair_count(line, word, sort = TRUE)

# when finding words most often occuring with a particular word,
# use unique_pair = FALSE
pride_prejudice_words \%>\%
  pair_count(line, word, sort = TRUE, unique_pair = FALSE) \%>\%
  filter(value1 == "elizabeth")
}

}

